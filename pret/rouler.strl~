% ;;;TOUCH G D;G D;G D; G; G D; G D; G D; G D; G D; G D;  


% ;;;TOUCH G D;G D;G D; G; G D; G D; G D; G D; ARRET;;;TOUCH G D;G D; G D; 

module rouler :
constant MAX=3 : integer;
inputoutput TOUCH;
inputoutput ARRET;
input G, D;
inputoutput G_Avance, D_Avance;
inputoutput G_Stop, D_Stop;
inputoutput SOS;

await immediate TOUCH;
loop
  trap TRAP_SOS,TRAP_ARRET in
  emit G_Avance;
  emit D_Avance;
  loop
    present ARRET then exit TRAP_ARRET end present;
    present not G and not D then exit TRAP_SOS end present;
    present G and not D then
      emit G_Stop;
      wait MAX tick;
      emit G_Avance  
    end present;
    present D and not G then
      emit D_Stop;
      wait MAX tick;
      emit D_Avance;
    end present;
    pause
  end loop
  handle TRAP_SOS do 
    sustain SOS 
  handle TRAP_ARRET do
    emit G_Stop; 
    emit D_Stop; 
  end trap
each TOUCH

end module
