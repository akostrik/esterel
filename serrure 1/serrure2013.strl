% CODE(1);;;CODE(2);;CODE(3);CODE(4);;;;;;;
% 

module serrure2013 :
constant code1=1  : integer;
constant code2=2  : integer;
constant code3=3  : integer;
constant code4=4  : integer;
constant duree=10 : integer;
input CODE        : integer;
output ROUGE;
output VERT;
output ATTENTE;
output T : integer;
output CODE_EST_LA_SIG;

[ var tick:=0 : integer in
  loop 
    tick:=tick+1; 
    emit T(tick); 
    pause; 
  end loop; 
  end var;] 
||
[
var nb_tentatives:=0 : integer in
loop
  [ abort
      sustain ROUGE;
    when VERT ] 
  || 
  [ var c1 : integer in
    var c2 : integer in
    var c3 : integer in
    var c4 : integer in
    await CODE;
    c1:=?CODE;
    trap TEMPS_ECOULE, CODE_EST_LA in
      [ repeat duree times
          pause
        end repeat; 
        exit TEMPS_ECOULE ] 
      ||
      [ await CODE;
        c2:=?CODE;
        await CODE;
        c3:=?CODE;
        await CODE;
        c4:=?CODE;
        emit CODE_EST_LA_SIG;
        exit CODE_EST_LA ]
    handle CODE_EST_LA do
      if c1=code1 and c2=code2 and c3=code3 and c4=code4 then
        repeat 10 times
          emit VERT;
          pause
        end repeat; 
      else 
        nb_tentatives:=nb_tentatives+1;
        repeat duree*nb_tentatives times
          emit ATTENTE;
          pause
        end repeat; 
      end if 
    end trap
    end var
    end var
    end var
    end var ]
end loop
end var
]

end module





